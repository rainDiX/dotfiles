;;; ayu-mirage-theme.el --- Theme 

;; Copyright (C) 2020 , all credit to dempfi

;; Author: all credit to dempfi
;; Version: 0.1
;; Package-Requires: ((emacs "24"))


;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program. If not, see <http://www.gnu.org/licenses/>.

;; This file is not part of Emacs.

;;; Commentary: I copied the color from ayu-theme/ayu-colors

;;; Code:

 (deftheme ayu-mirage)
 (let ((class '((class color) (min-colors 89)))
       (common_accent "#ffcc66")
       (common_fg "#cbcbc6")
       (fg2 "#bbbbb6")
       (fg3 "#ababa6")
       (fg4 "#9a9a96")
       (common_bg "#1f2430")
       (bg3 "#434751")
       (bg4 "#555962")
       (syntax_comment  "#5c6773")
       (syntax_markup   "#f28779")
       (syntax_constant "#d4bfff")
       (syntax_operator "#f29e74")
       (syntax_tag      "#5ccfe6")
       (syntax_regexp   "#95e6cb")
       (syntax_string   "#bae67e")
       (syntax_func     "#ffd580")
       (syntax_entity   "#73d0ff")
       (syntax_special  "#ffe6b3")
       (syntax_keyword  "#ffa759")
       (warning "#ff3333")
       (warning2 "#f27983")
       (ui_line "#191e2a")
       (ui_panel_bg "#232834")
       (ui_panel_shadow "#141925")
       (ui_panel_border "#101521")
       (ui_selection_bg "#34455a")
       (ui_selection_inactive "#2d3b4d")
       (ui_selection_border "#3c526a")
       (vcs_added "#a6cc70")
       (vcs_modified "#77a8d9")
       (vcs_removed "#f27983")
)
   (custom-theme-set-faces
   'ayu-mirage
        `(default ((,class (:background ,common_bg :foreground ,common_fg))))
        `(font-lock-builtin-face ((,class (:foreground ,syntax_operator))))
        `(font-lock-comment-face ((,class (:foreground ,syntax_comment))))
        `(font-lock-negation-char-face ((,class (:foreground ,syntax_constant))))
        `(font-lock-reference-face ((,class (:foreground ,syntax_constant))))
        `(font-lock-constant-face ((,class (:foreground ,syntax_constant))))
        `(font-lock-doc-face ((,class (:foreground ,syntax_comment))))
        `(font-lock-function-name-face ((,class (:foreground ,syntax_func ))))
        `(font-lock-keyword-face ((,class (:bold ,class :foreground ,syntax_keyword))))
        `(font-lock-string-face ((,class (:foreground ,syntax_string))))
        `(font-lock-type-face ((,class (:foreground ,syntax_entity ))))
        `(font-lock-variable-name-face ((,class (:foreground ,syntax_regexp))))
        `(font-lock-warning-face ((,class (:foreground ,warning :background ,ui_panel_shadow))))
        `(term-color-black ((,class (:foreground ,fg2 :background nil))))
        `(region ((,class (:background ,ui_selection_bg))))
        `(secondary-selection ((,class (:background ,ui_selection_inactive))))
        `(highlight ((,class (:foreground ,fg3 :background ,bg3))))
        `(hl-line ((,class (:background ,ui_panel_shadow))))
        `(fringe ((,class (:background ,ui_panel_shadow :foreground ,fg4))))
        `(cursor ((,class (:background ,common_accent))))
        `(show-paren-match-face ((,class (:background ,warning))))
        `(isearch ((,class (:bold t :foreground ,warning :background ,bg3))))
        `(mode-line ((,class (:box (:line-width 1 :color nil) :bold t :foreground ,fg4 :background ,ui_panel_shadow))))
        `(mode-line-inactive ((,class (:box (:line-width 1 :color nil :style pressed-button) :foreground ,syntax_regexp :background ,common_bg :weight normal))))
        `(mode-line-buffer-id ((,class (:bold t :foreground ,syntax_func :background nil))))
        `(mode-line-highlight ((,class (:foreground ,syntax_keyword :box nil :weight bold))))
        `(mode-line-emphasis ((,class (:foreground ,common_fg))))
        `(vertical-border ((,class (:foreground ,fg3))))
        `(minibuffer-prompt ((,class (:bold t :foreground ,syntax_keyword))))
        `(default-italic ((,class (:italic t))))
        `(link ((,class (:foreground ,syntax_constant :underline t))))
        `(org-code ((,class (:foreground ,fg2))))
        `(org-hide ((,class (:foreground ,fg4))))
        `(org-level-1 ((,class (:bold t :foreground ,fg2 :height 1.1))))
        `(org-level-2 ((,class (:bold nil :foreground ,fg3))))
        `(org-level-3 ((,class (:bold t :foreground ,fg4))))
        `(org-level-4 ((,class (:bold nil :foreground ,bg4))))
        `(org-date ((,class (:underline t :foreground ,syntax_regexp) )))
        `(org-footnote  ((,class (:underline t :foreground ,fg4))))
        `(org-link ((,class (:underline t :foreground ,syntax_entity ))))
        `(org-special-keyword ((,class (:foreground ,syntax_func))))
        `(org-block ((,class (:foreground ,fg3))))
        `(org-quote ((,class (:inherit org-block :slant italic))))
        `(org-verse ((,class (:inherit org-block :slant italic))))
        `(org-todo ((,class (:box (:line-width 1 :color ,fg3) :foreground ,syntax_keyword :bold t))))
        `(org-done ((,class (:box (:line-width 1 :color ,bg3) :bold t :foreground ,bg4))))
        `(org-warning ((,class (:underline t :foreground ,warning))))
        `(org-agenda-structure ((,class (:weight bold :foreground ,fg3 :box (:color ,fg4) :background ,bg3))))
        `(org-agenda-date ((,class (:foreground ,syntax_regexp :height 1.1 ))))
        `(org-agenda-date-weekend ((,class (:weight normal :foreground ,fg4))))
        `(org-agenda-date-today ((,class (:weight bold :foreground ,syntax_keyword :height 1.4))))
        `(org-agenda-done ((,class (:foreground ,bg4))))
        `(org-scheduled ((,class (:foreground ,syntax_entity))))
        `(org-scheduled-today ((,class (:foreground ,syntax_func :weight bold :height 1.2))))
        `(org-ellipsis ((,class (:foreground ,syntax_operator))))
        `(org-verbatim ((,class (:foreground ,fg4))))
        `(org-document-info-keyword ((,class (:foreground ,syntax_func))))
        `(font-latex-bold-face ((,class (:foreground ,syntax_entity))))
        `(font-latex-italic-face ((,class (:foreground ,syntax_regexp :italic t))))
        `(font-latex-string-face ((,class (:foreground ,syntax_string))))
        `(font-latex-match-reference-keywords ((,class (:foreground ,syntax_constant))))
        `(font-latex-match-variable-keywords ((,class (:foreground ,syntax_regexp))))
        `(ido-only-match ((,class (:foreground ,warning))))
        `(org-sexp-date ((,class (:foreground ,fg4))))
        `(ido-first-match ((,class (:foreground ,syntax_keyword :bold t))))
        `(ivy-current-match ((,class (:foreground ,fg3 :inherit highlight :underline t))))
        `(gnus-header-content ((,class (:foreground ,syntax_keyword))))
        `(gnus-header-from ((,class (:foreground ,syntax_regexp))))
        `(gnus-header-name ((,class (:foreground ,syntax_entity))))
        `(gnus-header-subject ((,class (:foreground ,syntax_func :bold t))))
        `(mu4e-view-url-number-face ((,class (:foreground ,syntax_entity))))
        `(mu4e-cited-1-face ((,class (:foreground ,fg2))))
        `(mu4e-cited-7-face ((,class (:foreground ,fg3))))
        `(mu4e-header-marks-face ((,class (:foreground ,syntax_entity))))
        `(ffap ((,class (:foreground ,fg4))))
        `(js2-private-function-call ((,class (:foreground ,syntax_constant))))
        `(js2-jsdoc-html-tag-delimiter ((,class (:foreground ,syntax_string))))
        `(js2-jsdoc-html-tag-name ((,class (:foreground ,syntax_regexp))))
        `(js2-external-variable ((,class (:foreground ,syntax_entity  ))))
        `(js2-function-param ((,class (:foreground ,syntax_constant))))
        `(js2-jsdoc-value ((,class (:foreground ,syntax_string))))
        `(js2-private-member ((,class (:foreground ,fg3))))
        `(js3-warning-face ((,class (:underline ,syntax_keyword))))
        `(js3-error-face ((,class (:underline ,warning))))
        `(js3-external-variable-face ((,class (:foreground ,syntax_regexp))))
        `(js3-function-param-face ((,class (:foreground ,fg2))))
        `(js3-jsdoc-tag-face ((,class (:foreground ,syntax_keyword))))
        `(js3-instance-member-face ((,class (:foreground ,syntax_constant))))
        `(warning ((,class (:foreground ,warning)))) 
        `(ac-completion-face ((,class (:underline t :foreground ,syntax_keyword))))
        `(info-quoted-name ((,class (:foreground ,syntax_operator))))
        `(info-string ((,class (:foreground ,syntax_string))))
        `(icompletep-determined ((,class :foreground ,syntax_operator)))
        `(undo-tree-visualizer-current-face ((,class :foreground ,syntax_operator)))
        `(undo-tree-visualizer-default-face ((,class :foreground ,fg2)))
        `(undo-tree-visualizer-unmodified-face ((,class :foreground ,syntax_regexp)))
        `(undo-tree-visualizer-register-face ((,class :foreground ,syntax_entity)))
        `(slime-repl-inputed-output-face ((,class (:foreground ,syntax_entity))))
        `(trailing-whitespace ((,class :foreground nil :background ,warning)))
        `(rainbow-delimiters-depth-1-face ((,class :foreground ,common_fg)))
        `(rainbow-delimiters-depth-2-face ((,class :foreground ,syntax_entity)))
        `(rainbow-delimiters-depth-3-face ((,class :foreground ,syntax_regexp)))
        `(rainbow-delimiters-depth-4-face ((,class :foreground ,syntax_constant)))
        `(rainbow-delimiters-depth-5-face ((,class :foreground ,syntax_keyword)))
        `(rainbow-delimiters-depth-6-face ((,class :foreground ,common_fg)))
        `(rainbow-delimiters-depth-7-face ((,class :foreground ,syntax_entity)))
        `(rainbow-delimiters-depth-8-face ((,class :foreground ,syntax_regexp)))
        `(magit-item-highlight ((,class :background ,bg3)))
        `(magit-section-heading        ((,class (:foreground ,syntax_keyword :weight bold))))
        `(magit-hunk-heading           ((,class (:background ,bg3))))
        `(magit-section-highlight      ((,class (:background ,ui_panel_shadow))))
        `(magit-hunk-heading-highlight ((,class (:background ,bg3))))
        `(magit-diff-context-highlight ((,class (:background ,bg3 :foreground ,fg3))))
        `(magit-diffstat-added   ((,class (:foreground ,vcs_added))))
        `(magit-diffstat-removed ((,class (:foreground ,vcs_removed))))
        `(magit-process-ok ((,class (:foreground ,syntax_func :weight bold))))
        `(magit-process-ng ((,class (:foreground ,warning :weight bold))))
        `(magit-branch ((,class (:foreground ,syntax_constant :weight bold))))
        `(magit-log-author ((,class (:foreground ,fg3))))
        `(magit-hash ((,class (:foreground ,fg2))))
        `(magit-diff-file-header ((,class (:foreground ,fg2 :background ,bg3))))
        `(lazy-highlight ((,class (:foreground ,fg2 :background ,bg3))))
        `(term ((,class (:foreground ,common_fg :background ,common_bg))))
        `(term-color-black ((,class (:foreground ,bg3 :background ,bg3))))
        `(term-color-blue ((,class (:foreground ,syntax_func :background ,syntax_func))))
        `(term-color-red ((,class (:foreground ,syntax_keyword :background ,bg3))))
        `(term-color-green ((,class (:foreground ,syntax_entity :background ,bg3))))
        `(term-color-yellow ((,class (:foreground ,syntax_regexp :background ,syntax_regexp))))
        `(term-color-magenta ((,class (:foreground ,syntax_operator :background ,syntax_operator))))
        `(term-color-cyan ((,class (:foreground ,syntax_string :background ,syntax_string))))
        `(term-color-white ((,class (:foreground ,fg2 :background ,fg2))))
        `(rainbow-delimiters-unmatched-face ((,class :foreground ,warning)))
        `(helm-header ((,class (:foreground ,fg2 :background ,common_bg :underline nil :box nil))))
        `(helm-source-header ((,class (:foreground ,syntax_keyword :background ,common_bg :underline nil :weight bold))))
        `(helm-selection ((,class (:background ,ui_panel_shadow :underline nil))))
        `(helm-selection-line ((,class (:background ,ui_panel_shadow))))
        `(helm-visible-mark ((,class (:foreground ,common_bg :background ,bg3))))
        `(helm-candidate-number ((,class (:foreground ,common_bg :background ,common_fg))))
        `(helm-separator ((,class (:foreground ,syntax_entity :background ,common_bg))))
        `(helm-time-zone-current ((,class (:foreground ,syntax_operator :background ,common_bg))))
        `(helm-time-zone-home ((,class (:foreground ,syntax_entity :background ,common_bg))))
        `(helm-buffer-not-saved ((,class (:foreground ,syntax_entity :background ,common_bg))))
        `(helm-buffer-process ((,class (:foreground ,syntax_operator :background ,common_bg))))
        `(helm-buffer-saved-out ((,class (:foreground ,common_fg :background ,common_bg))))
        `(helm-buffer-size ((,class (:foreground ,common_fg :background ,common_bg))))
        `(helm-ff-directory ((,class (:foreground ,syntax_func :background ,common_bg :weight bold))))
        `(helm-ff-file ((,class (:foreground ,common_fg :background ,common_bg :weight normal))))
        `(helm-ff-executable ((,class (:foreground ,syntax_regexp :background ,common_bg :weight normal))))
        `(helm-ff-invalid-symlink ((,class (:foreground ,warning2 :background ,common_bg :weight bold))))
        `(helm-ff-symlink ((,class (:foreground ,syntax_keyword :background ,common_bg :weight bold))))
        `(helm-ff-prefix ((,class (:foreground ,common_bg :background ,syntax_keyword :weight normal))))
        `(helm-grep-cmd-line ((,class (:foreground ,common_fg :background ,common_bg))))
        `(helm-grep-file ((,class (:foreground ,common_fg :background ,common_bg))))
        `(helm-grep-finish ((,class (:foreground ,fg2 :background ,common_bg))))
        `(helm-grep-lineno ((,class (:foreground ,common_fg :background ,common_bg))))
        `(helm-grep-match ((,class (:foreground nil :background nil :inherit helm-match))))
        `(helm-grep-running ((,class (:foreground ,syntax_func :background ,common_bg))))
        `(helm-moccur-buffer ((,class (:foreground ,syntax_func :background ,common_bg))))
        `(helm-source-go-package-godoc-description ((,class (:foreground ,syntax_string))))
        `(helm-bookmark-w3m ((,class (:foreground ,syntax_entity))))
        `(company-echo-common ((,class (:foreground ,common_bg :background ,common_fg))))
        `(company-preview ((,class (:background ,common_bg :foreground ,syntax_regexp))))
        `(company-preview-common ((,class (:foreground ,ui_panel_shadow :foreground ,fg3))))
        `(company-preview-search ((,class (:foreground ,syntax_entity :background ,common_bg))))
        `(company-scrollbar-bg ((,class (:background ,bg3))))
        `(company-scrollbar-fg ((,class (:foreground ,syntax_keyword))))
        `(company-tooltip ((,class (:foreground ,fg2 :background ,common_bg :bold t))))
        `(company-tooltop-annotation ((,class (:foreground ,syntax_constant))))
        `(company-tooltip-common ((,class ( :foreground ,fg3))))
        `(company-tooltip-common-selection ((,class (:foreground ,syntax_string))))
        `(company-tooltip-mouse ((,class (:inherit highlight))))
        `(company-tooltip-selection ((,class (:background ,bg3 :foreground ,fg3))))
        `(company-template-field ((,class (:inherit region))))
        `(web-mode-builtin-face ((,class (:inherit ,font-lock-builtin-face))))
        `(web-mode-comment-face ((,class (:inherit ,font-lock-comment-face))))
        `(web-mode-constant-face ((,class (:inherit ,font-lock-constant-face))))
        `(web-mode-keyword-face ((,class (:foreground ,syntax_keyword))))
        `(web-mode-doctype-face ((,class (:inherit ,font-lock-comment-face))))
        `(web-mode-function-name-face ((,class (:inherit ,font-lock-function-name-face))))
        `(web-mode-string-face ((,class (:foreground ,syntax_string))))
        `(web-mode-type-face ((,class (:inherit ,font-lock-type-face))))
        `(web-mode-html-attr-name-face ((,class (:foreground ,syntax_func))))
        `(web-mode-html-attr-value-face ((,class (:foreground ,syntax_keyword))))
        `(web-mode-warning-face ((,class (:inherit ,font-lock-warning-face))))
        `(web-mode-html-tag-face ((,class (:foreground ,syntax_operator))))
        `(jde-java-font-lock-package-face ((t (:foreground ,syntax_regexp))))
        `(jde-java-font-lock-public-face ((t (:foreground ,syntax_keyword))))
        `(jde-java-font-lock-private-face ((t (:foreground ,syntax_keyword))))
        `(jde-java-font-lock-constant-face ((t (:foreground ,syntax_constant))))
        `(jde-java-font-lock-modifier-face ((t (:foreground ,fg2))))
        `(jde-jave-font-lock-protected-face ((t (:foreground ,syntax_keyword))))
        `(jde-java-font-lock-number-face ((t (:foreground ,syntax_regexp))))))

;;;###autoload
(when load-file-name
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'ayu-mirage)

;; Local Variables:
;; no-byte-compile: t
;; End:

;;; ayu-mirage-theme.el ends here
