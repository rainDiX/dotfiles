source "%val{config}/plugins/plug.kak/rc/plug.kak"

#--General options-------------------------------------------------------------#
set-option global indentwidth 4
colorscheme ayu-dark

#--Highlighters----------------------------------------------------------------#
add-highlighter global/ number-lines -relative -hlcursor -separator 'â”‚'
add-highlighter global/ show-matching
add-highlighter global/ show-whitespaces
add-highlighter global/ wrap

#--Filetypes-------------------------------------------------------------------#
hook global BufCreate .*/waybar/config %{
    set-option buffer filetype json
}

hook global BufCreate .*.service %{
    set-option buffer filetype ini
}

#--System Clipboard------------------------------------------------------------#

hook global RegisterModified 'c' %{ nop %sh{
    printf %s "$kak_main_reg_c" | wl-copy -n > /dev/null 2>&1 &
}}

hook global RegisterModified 'p' %{ nop %sh{
    printf %s "$kak_main_reg_p" | wl-copy -pn > /dev/null 2>&1 &
}}

define-command -docstring 'set the c & p registers from the system clipboard' \
        pull-clipboard %{ evaluate-commands %sh{
    echo set-register c "$(wl-paste -n)"
}}

evaluate-commands %sh{
    if [ $TERM != foot ]; then
        printf "hook global RawKey <mouse:press:middle:.*> 'exec <esc>!wl-paste<space>-pn<ret>'"
    fi
}
#--Modules---------------------------------------------------------------------#
hook global ModuleLoaded x11 %{
    set-option global termcmd "foot -a floating-foot sh -c"
}

plug "andreyorst/fzf.kak" config %{
    map -docstring 'fzf mode' global normal '<c-p>' ': fzf-mode<ret>'
} #defer "fzf" %{
#}

#--kak-lsp---------------------------------------------------------------------#
eval %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(c|cpp|rust|zig) %{
    lsp-enable-window
    map -docstring enter-lsp-mode global normal '<c-l>' ': enter-user-mode lsp <ret>'
}
hook global WinSetOption filetype=(c|cpp|vhdl) %{
    set-option buffer indentwidth 2
}
